import {
    bb as C,
    bc as U,
    bd as F,
    be as L,
    bf as f,
    bg as G,
    bh as p,
    bi as I,
    bj as v,
    bk as A,
    bl as O,
    bm as h,
    bn as x,
    bo as P,
    bp as _,
    bq as k,
    br as w,
    bs as V,
    bt as W,
    bu as M,
    bv as R,
    bw as q,
    bx as z,
    by as E,
    bz as D,
    bA as $,
    bB as j,
    bC as N,
    bD as Z,
    bE as H,
    bF as J,
    bG as K,
    bH as Q,
    bI as X,
    bJ as Y,
    bK as aa,
    bL as sa,
    bM as ea,
    bN as Ta,
    bO as ta,
    bP as ca,
    bQ as na,
    bR as ra,
    bS as oa,
    bT as ia,
    bU as la,
    bV as ba,
    bW as da,
    bX as ma,
    bY as ua,
    bZ as Ba,
    b_ as Sa,
    b$ as ga,
    c0 as ya,
    c1 as Ca,
    c2 as Ua,
    c3 as Fa,
    c4 as La,
    c5 as fa,
    c6 as Ga,
    c7 as pa,
    c8 as Ia,
    c9 as va,
    ca as Aa,
    cb as Oa,
    cc as ha,
    cd as xa,
    ce as Pa,
    cf as _a,
    cg as ka,
    ch as wa,
    ci as Va,
    cj as Wa,
    ck as Ma,
    cl as Ra,
    cm as qa,
    cn as za,
    co as Ea,
    cp as Da,
    cq as $a,
    cr as ja,
    cs as Na,
    ct as Za,
    cu as Ha,
    cv as Ja,
    cw as Ka,
    cx as Qa,
    cy as Xa,
    cz as Ya,
    cA as as,
    cB as ss,
    cC as es,
    cD as Ts,
    cE as ts,
    cF as cs,
    cG as ns,
    cH as rs,
    cI as os,
    cJ as is,
    cK as ls,
    cL as bs,
    cM as ds,
    cN as ms,
    cO as us,
    cP as Bs,
    cQ as Ss,
    cR as i,
    cS as gs,
    cT as ys,
    cU as Cs,
    cV as Us,
    cW as Fs,
    cX as Ls,
    cY as fs,
    cZ as Gs,
    c_ as ps,
    c$ as Is,
    d0 as vs,
    d1 as As,
    d2 as Os,
    d3 as hs,
    d4 as xs,
    d5 as Ps,
    d6 as _s,
    d7 as ks,
    d8 as ws,
    d9 as Vs,
    da as Ws,
    db as Ms,
    dc as Rs,
    dd as qs,
    de as zs,
    df as Es,
    dg as Ds,
    dh as $s,
    di as js,
    dj as Ns,
    dk as Zs,
    dl as Hs,
    dm as Js,
    dn as Ks,
    dp as Qs,
    dq as Xs,
    dr as Ys,
    ds as ae,
    dt as se,
    du as ee,
    dv as Te,
    dw as te,
    y as t,
    dx as ce
} from "./DTouipjj.js";
import {
    g as ne
} from "./DxYf3bfi.js";
const re = { ...C,
        ...U,
        ...F,
        ...L,
        ...f,
        ...G,
        ...p
    },
    oe = { ...I,
        ...v,
        ...A,
        ...O,
        ...h,
        ...x,
        ...P,
        ..._,
        ...k,
        ...w
    },
    ie = { ...V,
        ...W,
        ...M,
        ...R,
        ...q,
        ...z,
        ...E,
        ...D,
        ...$,
        ...j,
        ...N,
        ...Z
    },
    le = { ...H,
        ...J,
        ...K,
        ...Q,
        ...X
    },
    be = { ...Y,
        ...aa
    },
    de = { ...sa,
        ...ea,
        ...Ta,
        ...ta,
        ...ca,
        ...na,
        ...ra,
        ...oa,
        ...ia,
        ...la,
        ...ba
    },
    me = { ...da,
        ...ma
    },
    ue = { ...ua,
        ...Ba,
        ...Sa,
        ...ga
    },
    Be = { ...ya,
        ...Ca,
        ...Ua,
        ...Fa,
        ...La,
        ...fa,
        ...Ga,
        ...pa,
        ...Ia
    },
    Se = { ...va,
        ...Aa,
        ...Oa,
        ...ha
    },
    ge = { ...xa,
        ...Pa,
        ..._a
    },
    ye = { ...ka
    },
    Ce = { ...wa,
        ...Va,
        ...Wa,
        ...Ma,
        ...Ra,
        ...qa,
        ...za,
        ...Ea,
        ...Da
    },
    Ue = { ...$a,
        ...ja,
        ...Na,
        ...Za,
        ...Ha,
        ...Ja,
        ...Ka
    },
    Fe = { ...Qa,
        ...Xa
    },
    Le = { ...Ya,
        ...as,
        ...ss,
        ...es,
        ...Ts,
        ...ts,
        ...cs,
        ...ns,
        ...rs
    },
    fe = { ...os,
        ...is,
        ...ls,
        ...bs,
        ...ds,
        ...ms
    },
    Ge = { ...us,
        ...Bs,
        ...Ss,
        ...i,
        ...i,
        ...gs,
        ...ys,
        ...Cs,
        ...Us,
        ...Fs,
        ...Ls,
        ...fs,
        ...Gs,
        ...ps,
        ...Is,
        ...vs,
        ...As,
        ...Os
    },
    pe = { ...hs,
        ...xs,
        ...Ps,
        ..._s,
        ...ks
    },
    Ie = { ...ws
    },
    ve = { ...Vs,
        ...Ws,
        ...Ms,
        ...Rs,
        ...qs
    },
    Ae = { ...zs,
        ...Es,
        ...Ds,
        ...$s,
        ...js,
        ...Ns
    },
    Oe = { ...Zs,
        ...Hs,
        ...Js,
        ...Ks,
        ...Qs,
        ...Xs,
        ...Ys
    },
    he = { ...ae,
        ...se,
        ...ee,
        ...Te,
        ...te
    },
    xe = { ...re,
        ...oe,
        ...ie,
        ...le,
        ...be,
        ...de,
        ...me,
        ...ue,
        ...Be,
        ...Se,
        ...ge,
        ...ye,
        ...Ce,
        ...Ue,
        ...Fe,
        ...Le,
        ...fe,
        ...Ge,
        ...pe,
        ...Ie,
        ...ve,
        ...Ae,
        ...Oe,
        ...he
    },
    l = {
        width: 540,
        height: 540
    },
    b = (a, s) => {
        try {
            return t(a) ? null : a[s] || a[0]
        } catch (e) {
            throw e
        }
    },
    We = (a, s, e = 0) => {
        try {
            if (!t(s)) return s;
            if (t(a)) return l;
            const {
                name: T,
                settings: d
            } = a || {}, {
                widgetContainerType: m,
                imageResize: u
            } = d || {}, c = u || s || l, n = xe[T];
            if (n) {
                const {
                    imageSizes: B,
                    isFullContainerByDefault: S
                } = n, {
                    full: g,
                    narrow: y
                } = B, r = b(g, e), o = b(y, e);
                return (ne(m, S) === ce.Wide ? r : o) || o || r || c
            }
            return console.log(`Using widget (${a.name}) image resize - ${e}`), c
        } catch (T) {
            console.log(T)
        }
    };
export {
    xe as W, We as g
};